/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package backstage;

import backstage.Stock;
import backstage.StockAccount;
import backstage.Tool;
import static backstage.StockAccount.TRANS;
import connect_database.CustomerAddingFunction;
import connect_database.CustomerAlteringFunction;
import connect_database.CustomerDeletingFunction;
import connect_database.CustomerSearchingFunction;
import connect_database.ManagerFunction;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author user
 */
public class StockJFrame extends javax.swing.JFrame {

    private StockAccount account;
    private List<String[]> stocklist;
    private List<String[]> cusStocklist;

    /**
     * Creates new form StockJFrame
     */
    public StockJFrame(StockAccount account) {
        this.account = account;
        initComponents();

        this.setStockList();
        this.setMyStockList();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setVisible(true);
    }

    public void setStockList() {
        ArrayList<String> strings = new ArrayList<String>();
        List<String[]> stocklist = ManagerFunction.searchAllStockList();
        for (int i = 0; i < stocklist.size(); i++) {
            strings.add(Arrays.toString(stocklist.get(i)));
        }
        this.stocklist = stocklist;
        stockList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return strings.size();
            }

            public String getElementAt(int i) {
                return strings.get(i);
            }
        });
    }

    public void setMyStockList() {
        ArrayList<String> strings = new ArrayList<String>();
        List<String[]> cusStocklist = CustomerSearchingFunction.searchStockList(
                account.customerID);
        for (int i = 0; i < cusStocklist.size(); i++) {
            strings.add(Arrays.toString(cusStocklist.get(i)));
        }
        this.cusStocklist = cusStocklist;
        myStockList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return strings.size();
            }

            public String getElementAt(int i) {
                return strings.get(i);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stockList = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        buyTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        myStockList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(stockList);

        jButton1.setText("Buy");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sell One");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        errorLabel.setText(" ");

        jLabel1.setText("All Stocks:");

        jLabel2.setText("Your Stocks:");

        jScrollPane2.setViewportView(myStockList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton2)
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(buyTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(buyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(errorLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2)))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int index = stockList.getSelectedIndex();
        //int index = account.checkID(stockId, stocklist);

        Stock currentStock = new Stock(Integer.parseInt(stocklist.get(
                index)[0]), stocklist.get(index)[1], new BigDecimal(
                                       stocklist.get(index)[2]));
        String stockNumStr = buyTextField.getText();
        if (!Tool.is_number(stockNumStr)) {
            errorLabel.setText("Invalid input number.");
        }
        else {
            int stockNum = Integer.valueOf(stockNumStr);
            BigDecimal payMoney = currentStock.getOriginprice().multiply(
                    new BigDecimal(stockNum));
            if (account.getStockBalance() != null && payMoney.compareTo(
                    account.getStockBalance()) > 0) {
                errorLabel.setText("You do not have enough balance!");
            }
            else {
                errorLabel.setText("You have bought this stock successfully!");
                account.setStockBalance(account.getStockBalance().subtract(
                        payMoney));
                account.createTransaction("-" + payMoney.toString(),
                                          "Dollar", "Buy stocks.");
                CustomerAlteringFunction.alterStockAccount(
                        account.customerID, payMoney.multiply(TRANS));
                CustomerAddingFunction.addStockOwnership(account.customerID,
                                                         index,
                                                         currentStock.getOriginprice(),
                                                         stockNum);
                this.setMyStockList();
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int index = myStockList.getSelectedIndex();
        if (index >= 0) {
            CustomerDeletingFunction.deleteOneStock(account.customerID,
                                                    Integer.parseInt(
                                                            cusStocklist.get(
                                                                    index)[0]));
            BigDecimal ori = new BigDecimal(cusStocklist.get(index)[2]);
            BigDecimal cur = new BigDecimal(cusStocklist.get(index)[3]);
            BigDecimal profit = (cur.subtract(ori)).multiply(
                    new BigDecimal(cusStocklist.get(index)[4]));
            CustomerAlteringFunction.alterStockAccount(account.customerID,
                                                       profit);
            account.setStockBalance(account.getStockBalance().add(profit));
            account.createTransaction(profit.toString(), "Dollar",
                                      "Sell stocks.");
            errorLabel.setText("Successfully sell one stock.");
            setMyStockList();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockJFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockJFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockJFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockJFrame.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buyTextField;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> myStockList;
    private javax.swing.JList<String> stockList;
    // End of variables declaration//GEN-END:variables
}
